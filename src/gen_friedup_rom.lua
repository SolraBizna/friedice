#!/usr/bin/env lua5.3

local f = assert(io.open("src/friedup_rom.v", "w"))
f:write("// Auto-generated by gen_friedup_rom.lua, don't edit!\n")
for n=0,7 do
   local INIT_LO = (("%x"):format(0xfa00 + (n*32) + (15-n*2))):rep(16)
   local INIT_HI = (("%x"):format(0xfa00 + (n*32+16) + (14-n*2))):rep(16)
   f:write(([[SB_RAM40_4K #(
.INIT_0(256'h%s),
.INIT_1(256'h%s),
.INIT_2(256'h%s),
.INIT_3(256'h%s),
.INIT_4(256'h%s),
.INIT_5(256'h%s),
.INIT_6(256'h%s),
.INIT_7(256'h%s),
.INIT_8(256'h%s),
.INIT_9(256'h%s),
.INIT_A(256'h%s),
.INIT_B(256'h%s),
.INIT_C(256'h%s),
.INIT_D(256'h%s),
.INIT_E(256'h%s),
.INIT_F(256'h%s)
) rom%ilo(.RDATA(data_from_rom[%i][15:0]),
          .RADDR({3'b 000, addr_from_core[9:2]}),
          .RCLK(clock),
          .RE(rom_select),
          .RCLKE(rom_select));
]]):format(INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,
           INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,INIT_LO,
           n, n))
   f:write(([[SB_RAM40_4K #(
.INIT_0(256'h%s),
.INIT_1(256'h%s),
.INIT_2(256'h%s),
.INIT_3(256'h%s),
.INIT_4(256'h%s),
.INIT_5(256'h%s),
.INIT_6(256'h%s),
.INIT_7(256'h%s),
.INIT_8(256'h%s),
.INIT_9(256'h%s),
.INIT_A(256'h%s),
.INIT_B(256'h%s),
.INIT_C(256'h%s),
.INIT_D(256'h%s),
.INIT_E(256'h%s),
.INIT_F(256'h%s)
) rom%ihi(.RDATA(data_from_rom[%i][31:16]),
          .RADDR({3'b 000, addr_from_core[9:2]}),
          .RCLK(clock),
          .RE(rom_select),
          .RCLKE(rom_select));
]]):format(INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,
           INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,INIT_HI,
           n, n))
end
f:close()

--[[
      SB_RAM40_4K lo
           (
            
            ), hi
           (
            .RDATA(data_from_rom[n][31:16]),
            .RADDR({3'b 000, addr_from_core[9:2]}),
            .RCLK(clock),
            .RE(select)
            );
]]
